name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.4-alpine3.21
        env:
          POSTGRES_DB: foreaidb
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ vars.POSTGRES_USER }} -d ${{ vars.POSTGRES_DB }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Check PostgreSQL Logs
      run: docker logs $(docker ps -q --filter ancestor=postgres:17.4-alpine3.21)

    - name: Wait for PostgreSQL to be Ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        until PGPASSWORD=${{ vars.POSTGRES_PASSWORD }} psql -h localhost -U ${{ vars.POSTGRES_USER }} -d ${{ vars.POSTGRES_DB }} -c '\q'; do
          echo "Waiting for PostgreSQL..."
          sleep 5
        done
        echo "PostgreSQL is ready!"

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start Backend
      run: |
        docker run -d --name fore-ai-backend \
          --network=host \
          -e DATABASE_CONNECTION_STRING=postgresql://admin:admin@localhost:5432/foreaidb \
          michaloni/foreai:v1

    - name: Wait for Backend to be Ready
      run: |
        echo "Waiting for backend to be ready..."
        until curl --silent --fail http://localhost:80/docs; do
          echo "Waiting for backend..."
          sleep 5
        done
        echo "Backend is ready!"

    - name: Run Tests
      env:
        BASE_URL: "http://localhost:80"
      run: |
        pytest tests/
