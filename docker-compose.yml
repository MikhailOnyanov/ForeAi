services:
  postgres:
    container_name: postgres_container
    image: postgres:17.4-alpine3.21
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "foreaidb"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - foreai-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d foreaidb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - backend

  fore-ai-backend:
    env_file:
      - path: ForeAiBackend/app/docker/.env
        required: true
    container_name: fore-ai-back-dev
    image: fore-ai-backend:latest
    ports:
      - "80:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  chroma-server:
      image: chromadb/chroma:latest
      volumes:
        - chroma_data:/data
      ports:
        - "8000:8000"
      networks:
        - backend

  fore-ai-chatbot:
    env_file:
      - path: ForeAITgBot/docker/.env
        required: true
    container_name: fore-ai-chatbot
    image: fore-ai-tg-bot:latest
    ports:
      - "88:88"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend


volumes:
  foreai-data:
  pgadmin-data:
  chroma_data:

networks:
  backend:
    driver: bridge