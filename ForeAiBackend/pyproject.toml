[project]
name = "foreaibackend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aioredis[hiredis]>=2.0.1",
    "beautifulsoup4",
    "chromadb==1.0.0",
    "fastapi[standard]==0.115.9",
    "httpx>=0.28.1",
    "itsdangerous>=2.2.0",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.9.1",
    "pytest>=8.3.5",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.20",
    "pyyaml>=6.0.2",
    "redis[hiredis]>=6.2.0",
    "regex>=2024.11.6",
    "requests>=2.32.3",
    "sqlmodel>=0.0.24",
    "uuid>=1.30",
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.ruff]
target-version = "py312"
line-length = 99
src = ["ForeAiBackend/app", "ForeAiTgBot"]
exclude = [
    ".venv", 
    "venv", 
    "migrations"
]
# Автоисправление по возможности
fix = true

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "B",      # bugbear
    "I",      # isort (импорт-стиль)
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "D",      # pydocstyle (docstrings)
    "Q",      # flake8-quotes (строгие кавычки)
    "S",      # bandit (security)
    "C4",     # comprehensions
    "ANN",    # flake8-annotations (type hints)
    "ASYNC",  # flake8-async
    "A",      # flake8-builtins
    "C90",    # mccabe complexity
    "ERA",    # eradicate (удаление закомментированного кода)
    "PIE",    # flake8-pie (лучшие практики)
    "RET",    # flake8-return (возврат функций)
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "PL",     # pylint (базовые правила)
]
ignore = [
    "E501",   # длина строки обрабатывается форматтером (black/isort)
    "B008",   # разрешить функцию по умолчанию как аргумент
    "D107",   # не требовать docstring для __init__
    "D203",   # конфликтует с D211 (одна пустая строка перед class)
    "D213",   # google style: Summary on the second line
    "ANN101", # не требовать type hints для self
    "ANN102", # не требовать type hints для cls
    "ERA001", # можно временно оставлять закомментированный код
]

# Требовать google docstring style (D213, D404, D415)
[tool.ruff.lint.pydocstyle]
convention = "google"

# Кавычки: только одинарные, docstrings — только двойные
[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"
docstring-quotes = "double"
avoid-escape = true

# Запретить print, pdb (security bandit)
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D", "ANN"]
"scripts/*" = ["S101"]

# Сложность кода (макс. 10)
[tool.ruff.lint.mccabe]
max-complexity = 10

# Автосортировка импортов
[tool.ruff.lint.isort]
force-single-line = false
known-first-party = ["your_package"]
known-third-party = []
combine-as-imports = true
lines-after-imports = 2

# Правила для type hints
[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
allow-star-arg-any = false

